import cv2
import numpy as np

# Step 1: Read the image
image = cv2.imread('input.jpg')
if image is None:
    print("Error: Image not found.")
    exit()

# Step 2: Define 4 source points (the corners of the region you want to warp)
# These should be in the order: top-left, top-right, bottom-right, bottom-left
# Manually picked points or obtained from some detection
src_points = np.float32([
    [320, 15],     # top-left
    [700, 65],     # top-right
    [750, 520],    # bottom-right
    [280, 500]     # bottom-left
])

# Step 3: Define 4 destination points (where the above points map to)
# For example, we want a straight rectangle of size 400x600
dst_points = np.float32([
    [0, 0],
    [400, 0],
    [400, 600],
    [0, 600]
])

# Step 4: Compute the Homography matrix
homography_matrix, status = cv2.findHomography(src_points, dst_points)

# Step 5: Apply the warp perspective transformation
warped_image = cv2.warpPerspective(image, homography_matrix, (400, 600))

# Step 6: Show and save the result
cv2.imshow("Original Image", image)
cv2.imshow("Warped Image", warped_image)
cv2.imwrite("warped_output.jpg", warped_image)

cv2.waitKey(0)
cv2.destroyAllWindows()
